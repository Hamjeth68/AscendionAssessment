name: React Native CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '11'
  RUBY_VERSION: '3.0'

jobs:
  # Code Quality & Testing
  code-quality:
    name: Code Quality & Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: TypeScript Check
      run: npx tsc --noEmit
      
    - name: ESLint Check
      run: npm run lint
      
    - name: Prettier Check
      run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json}"
      
    - name: Run Unit Tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Android Build
  android-build:
    name: Android Build & Test
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install Dependencies
      run: npm ci
      
    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew
      
    - name: Generate Debug APK
      run: cd android && ./gradlew assembleDebug --stacktrace
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Run Android Tests
      run: cd android && ./gradlew test --stacktrace
